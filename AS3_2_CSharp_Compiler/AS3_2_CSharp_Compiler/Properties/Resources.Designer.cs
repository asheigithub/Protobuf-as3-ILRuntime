//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace AS3_2_CSharp_Compiler.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AS3_2_CSharp_Compiler.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   使用此强类型资源类，为所有资源查找
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 				{
        ///					var value = ___[CNAME];
        ///					if (value != null)
        ///					{
        ///						player.setMemberValue(as3Object, &quot;[NAME]&quot;, LoadBindObjectAndWriteField(value));
        ///					}
        ///					else
        ///					{
        ///						player.setMemberValue(as3Object, &quot;[NAME]&quot;, null);
        ///					}
        ///				}
        /// 的本地化字符串。
        /// </summary>
        internal static string ClassPropertyBeforeWriteTo {
            get {
                return ResourceManager.GetString("ClassPropertyBeforeWriteTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 		private [PROPERTYTYPE] ___[CNAME]; private bool ___[CNAME]flag___;
        ///		public [PROPERTYTYPE] [CNAME]
        ///		{
        ///			get
        ///			{
        ///				if (___[CNAME] == null &amp;&amp; !___[CNAME]flag___)
        ///				{
        ///					___[CNAME]flag___ = true;
        ///					var obj = player.getMemberValue(as3Object, &quot;[NAME]&quot;);
        ///					if(obj !=null)
        ///						___[CNAME] = [PROPERTYTYPE].Create(obj);
        ///				}
        ///
        ///				return ___[CNAME];
        ///			}
        ///			set
        ///			{
        ///				___[CNAME] = value;
        ///				if (value != null)
        ///				{
        ///					player.setMemberValue(as3Object, &quot;[NAME]&quot;, LoadBindObject [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string ClassPropertyTemplate {
            get {
                return ResourceManager.GetString("ClassPropertyTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 namespace [PACKAGE]
        ///{
        ///	public enum [CLASSNAME]
        ///	{
        ///[CONTENT]
        ///	}
        ///}
        /// 的本地化字符串。
        /// </summary>
        internal static string EnumTemplate {
            get {
                return ResourceManager.GetString("EnumTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 namespace [PACKAGE]
        ///{
        ///	public class [CLASSNAME] : AS3Proto.Message
        ///	{
        ///		public [CLASSNAME]()
        ///		{
        ///			createAs3Object(&quot;[AS3PROTOTYPE]&quot;);
        ///		}
        ///
        ///		private [CLASSNAME](ASBinCode.rtData.rtObject rtObject)
        ///		{
        ///			setAs3Object(rtObject);
        ///		}
        ///
        ///		internal static [CLASSNAME] Create(object rtObject)
        ///		{
        ///			return new [CLASSNAME]((ASBinCode.rtData.rtObject)rtObject);
        ///		}
        ///
        ///
        ///[CONTENT]
        ///
        ///[afterMergeFrom]
        ///
        ///[beforeWriteTo]
        ///	}
        ///}
        /// 的本地化字符串。
        /// </summary>
        internal static string MessageTemplate {
            get {
                return ResourceManager.GetString("MessageTemplate", resourceCulture);
            }
        }
    }
}
